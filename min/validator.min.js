class Validator{#a;constructor(){this.#a={}}make(e){if(this.#b(),"object"==typeof e){for(let r in e){let t;document.getElementsByName(r)[0]?t=document.getElementsByName(r)[0]:console.error("Input not found"),Array.isArray(e[r])?e[r].includes("number")?this.#c(t,e[r]):this.#d(t,e[r]):console.error("The rules must be an array")}return this.#a}console.error("The input of the function must be an object")}#c(e,r){for(let t of r)if("required"===(t=t.toLowerCase()))e.value&&""!==e.value.trim()&&void 0!==e||this.#e(e.name,"This field is required");else if("number"===t)isNaN(e.value)&&this.#e(e.name,"This field must be number");else if(t.startsWith("min:")){let s=t.replace("min:","");Number(e.value)<Number(s)&&this.#e(e.name,`min number equal or upper than ${s}`)}else if(t.startsWith("max:")){let a=t.replace("max:","");Number(e.value)>Number(a)&&this.#e(e.name,`max number equal or lower than ${a}`)}else t.startsWith("regex:")&&(RegExp(t.replace("regex:","")).test(e.value)||this.#e(e.name,"This pattern is not approved"))}#d(i,l){for(let o of l)if("required"===(o=o.toLowerCase()))i.value&&""!==i.value.trim()&&void 0!==i||this.#e(i.name,"This field is required");else if(o.startsWith("min:")){let n=o.replace("min:","");i.value.length<Number(n)&&this.#e(i.name,`min length equal or upper than ${n}`)}else if(o.startsWith("max:")){let m=o.replace("max:","");i.value.length>Number(m)&&this.#e(i.name,`max length equal or lower than ${m}`)}else o.startsWith("regex:")?RegExp(o.replace("regex:","")).test(i.value)||this.#e(i.name,"This pattern is not approved"):"email"!==o||isEmail(i.value)||this.#e(i.name,"must be email format")}#e(u,h){this.#a[u]||(this.#a[u]=[]),this.#a[u].push(h)}hasErrors(){return Object.keys(this.#a).length>0}#b(){this.#a={}}isEmail(e){return isEmail(e)}}const validator=new Validator;function validation(e){return validator.make(e)}function isEmail(e){return/[^\s@]+@[^\s@]+\.[^\s@]+/.test(e)}